// index.js
const express = require('express');
const line = require('@line/bot-sdk');
const { execTopup } = require('./bot');
const path = require('path');
require('dotenv').config();

const config = {
  channelAccessToken: process.env.LINE_CHANNEL_ACCESS_TOKEN,
  channelSecret: process.env.LINE_CHANNEL_SECRET
};

const client = new line.Client(config);
const app = express();
app.use(express.json());

// Serve images
app.use('/images', express.static(path.join(__dirname, 'public/images')));

// User sessions (‡∏à‡∏≥‡πÑ‡∏ß‡πâ‡∏ß‡πà‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡πÑ‡∏´‡∏ô)
const session = {};

app.post('/webhook', line.middleware(config), (req, res) => {
  Promise.all(req.body.events.map(handleEvent))
    .then(result => res.json(result))
    .catch(err => {
      console.error('Webhook error:', err);
      res.status(500).end();
    });
});

async function handleEvent(event) {
  if (event.type !== 'message' || event.message.type !== 'text') return Promise.resolve(null);

  const msg = event.message.text.trim().toLowerCase();
  const userId = event.source.userId;
  const profile = await client.getProfile(userId);

  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏≤‡πÄ‡∏ü‡∏µ‡∏¢
  if (!profile.displayName.includes('‚úÖ')) {
    return client.replyMessage(event.replyToken, {
      type: 'text',
      text: 'You Not Mafia‚Äã ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏°‡∏≤‡πÄ‡∏ü‡∏µ‡∏¢..'
    });
  }

  // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô
  if (msg === '‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô') {
    session[userId] = { step: 'await_amount' };
    return client.replyMessage(event.replyToken, {
      type: 'text',
      text:
        '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡∏Ñ‡πà‡∏∞\n' +
        'üí∏ 100 = 1100 ‡∏û‡πâ‡∏≠‡∏¢‡∏ó‡πå\n' +
        'üí∏ 500 = 5500 ‡∏û‡πâ‡∏≠‡∏¢‡∏ó‡πå\n' +
        'üí∏ 1000 = 11000 ‡∏û‡πâ‡∏≠‡∏¢‡∏ó‡πå\n' +
        'üí∏ 3000 = 33000 ‡∏û‡πâ‡∏≠‡∏¢‡∏ó‡πå\n' +
        'üí∏ 10000 = 113000 ‡∏û‡πâ‡∏≠‡∏¢‡∏ó‡πå\n' +
        '\n‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‡πÉ‡∏´‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏ä‡πà‡∏ô: 920'
    });
  }

  // ‡∏£‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏û‡∏¥‡∏°
  if (session[userId]?.step === 'await_amount') {
    const amount = parseInt(msg);
    if (isNaN(amount) || amount < 1) {
      return client.replyMessage(event.replyToken, {
        type: 'text',
        text: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡πÄ‡∏ä‡πà‡∏ô 100 500 1000 ‡∏Ñ‡πà‡∏∞'
      });
    }
    session[userId] = { step: 'await_aid', amount };
    return client.replyMessage(event.replyToken, {
      type: 'text',
      text: '‡πÇ‡∏õ‡∏£‡∏î‡∏û‡∏¥‡∏°‡∏û‡πå‡∏£‡∏´‡∏±‡∏™ AID ‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡πà‡∏∞ ‡πÄ‡∏ä‡πà‡∏ô:\nAID123456'
    });
  }

  // ‡∏£‡∏±‡∏ö‡∏£‡∏´‡∏±‡∏™ AID ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô
  if (session[userId]?.step === 'await_aid' && msg.startsWith('aid')) {
    const aid = msg.toUpperCase();
    const amount = session[userId].amount;
    delete session[userId];
    await client.replyMessage(event.replyToken, {
      type: 'text',
      text: `‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô ${amount} ‡∏ö‡∏≤‡∏ó ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö ${aid} ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏Ñ‡πà‡∏∞...`
    });
    await execTopup(client, userId, aid, amount);
    return;
  }

  return Promise.resolve(null);
}

const port = process.env.PORT || 3000;
app.listen(port, () => {
  console.log(`üöÄ Bot server is running at port ${port}`);
});



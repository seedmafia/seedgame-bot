    await page.waitForTimeout(2000);

    // ‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏£‡∏∞‡∏ö‡∏∏
    const amountInputSelector = 'input[name="amount"]';
    await page.waitForSelector(amountInputSelector);
    await page.fill(amountInputSelector, amount.toString());

    // ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡∏™‡πà‡∏á‡∏û‡∏≠‡∏¢‡∏ï‡πå"
    await page.click('text=‡∏™‡πà‡∏á‡∏û‡∏≠‡∏¢‡∏ï‡πå');
    await page.waitForSelector('input[name="aid"]', { timeout: 5000 });
    await page.fill('input[name="aid"]', aid);
    await page.click('text=‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô');

    // ‡∏£‡∏≠‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î QR Code
    await page.waitForSelector('text=QR Code', { timeout: 5000 });
    await page.click('text=QR Code');
    await page.waitForSelector('div.qr-box img');

    // ‡πÅ‡∏Ñ‡∏õ‡∏†‡∏≤‡∏û QR Code
    const qrElement = await page.$('div.qr-box');
    const qrPath = path.join(__dirname, `public/images/qr-${userId}.png`);
    await qrElement.screenshot({ path: qrPath });

    await client.pushMessage(userId, [
      { type: 'text', text: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏ß‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡πà‡∏∞' },
      {
        type: 'image',
        originalContentUrl: `https://seedgame-bot.onrender.com/images/qr-${userId}.png`,
        previewImageUrl: `https://seedgame-bot.onrender.com/images/qr-${userId}.png`
      }
    ]);

    let success = false;
    const timeout = Date.now() + 2 * 60 * 1000;

    while (Date.now() < timeout) {
      const html = await page.content();
      if (html.includes('‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢')) {
        success = true;
        break;
      }
      await page.waitForTimeout(3000);
    }

    if (success) {
      const donePath = path.join(__dirname, `public/images/done-${userId}.png`);
      await page.screenshot({ path: donePath, fullPage: true });

      await client.pushMessage(userId, [
        {
          type: 'text',
          text: '‡∏¢‡∏≠‡∏î‡πÄ‡∏ï‡∏¥‡∏°‡∏û‡πâ‡∏≠‡∏¢‡∏ó‡πå‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ ‡∏Ç‡∏≠‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‚Äã‡∏°‡∏≤‡∏Å üôèü•∞'
        },
        {
          type: 'image',
          originalContentUrl: `https://seedgame-bot.onrender.com/images/done-${userId}.png`,
          previewImageUrl: `https://seedgame-bot.onrender.com/images/done-${userId}.png`
        }
      ]);
    } else {
      await client.pushMessage(userId, {
        type: 'text',
        text: '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 5 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏Ñ‡πà‡∏∞'
      });
    }

  } catch (err) {
    console.error(err);
    await client.pushMessage(userId, {
      type: 'text',
      text: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞'
    });
  } finally {
    await browser.close();
    delete pendingOrders[userId];
  }
}

module.exports = { execTopup };